#include <stdio.h>
#include <stdlib.h>
#include <string.h> 
#define MAXSIZE 1000 

typedef struct node 
{ 
int element[MAXSIZE]; 
int Top; 
} stack; 

stack *S; 

stack *setnull(stack *S){
	S->Top=-1;
	return S;
}

int empty(stack *p){
	if(p->Top>=0)
		return 0;
	else 
		return 1;
}

stack *push(stack *p, int e){
	p->Top++;
	p->element[p->Top]=e;
	return p;
}

char pop(stack *r){
	int p;
	r->Top--;
	p=r->element[r->Top+1];
	return p;
}

int check(stack *r,int s){
	int i;
	if(r->Top==-1)
		return 1;
	for(i=0;i<=r->Top;i++){
		if(r->element[i]==s)
			return 0;
	}
	return 1;
}

int correct(int s[],int ss[],int l,int m){
	int i,j,t,n,p,q;
	i=0;
	t=ss[i];
	n=0;
	for(p=0;p<l;p++){
		for(q=0;q<l;q++){
			if(ss[p]==s[q])
				break;
		}
		if(q==l)
			return 0;
	}
	while(t!=ss[l-1]){
		for(j=n;s[j]!=t&&check(S,t);j++)
			push(S,s[j]);
		if(s[j]==t&&check(S,t)){
			push(S,s[j]);
			n=j+1;
		}
		if((S->Top+1)>m)
			return 0;
		if(S->element[S->Top]==t){
			pop(S);
		}
		else
			return 0;
		t=ss[++i];
	}
	return 1;
}

int main(){ 
	int num,max,len,sign;
	int i,j;
	S = (stack*)malloc(sizeof(stack));
	S=setnull(S);
	scanf("%d %d %d",&max,&len,&num);
	int ss[MAXSIZE],s[MAXSIZE],t[MAXSIZE];
	for(i=0;i<len;i++)
		scanf("%d",&s[i]);
	for(i=0;i<num;i++){
		S=setnull(S);
		for(j=0;j<len;j++)
			scanf("%d",&ss[j]); 
		sign=correct(s,ss,len,max);
		if(sign)
			t[i]=1;
		else
			t[i]=0;	
	}
	for(i=0;i<num;i++){
		if(t[i]==0)
			printf("NO\n");
		if(t[i]==1)
			printf("YES\n");
	}
	return 0; 
} 


